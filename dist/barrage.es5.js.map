{"version":3,"file":"barrage.es5.js","sources":["../src/helper/index.ts","../src/event-emitter.ts","../src/track.ts","../src/commander/base.ts","../src/commander/canvas/base-canvas.ts","../src/commander/canvas/base-fixed.ts","../src/constants/index.ts","../src/commander/canvas/fixed-top.ts","../src/commander/canvas/fixed-bottom.ts","../src/commander/canvas/rolling.ts","../src/commander/canvas/index.ts","../src/commander/css-renderer/base-css.ts","../src/commander/css-renderer/base-fixed.ts","../src/helper/css.ts","../src/commander/css-renderer/fixed-top.ts","../src/commander/css-renderer/rolling.ts","../src/commander/css-renderer/index.ts","../src/commander/index.ts","../src/event/index.ts","../src/stragy/canvas.ts","../src/stragy/css3.ts","../src/stragy/index.ts","../src/a-barrage.ts"],"sourcesContent":["import { ScrollBarrageObject, FixedBarrageObejct } from '../types'\n\nexport function isEmptyArray<T>(array: T[]): boolean {\n  return array.length === 0\n}\n\nexport function getArrayRight<T>(array: T[]): T {\n  return array[array.length - 1]\n}\n\nexport function isDiv(el: any): el is HTMLDivElement {\n  return el instanceof HTMLDivElement\n}\n\nexport function isCanvas(el: any): el is HTMLCanvasElement {\n  return el instanceof HTMLCanvasElement\n}\n\nexport function getEl(\n  el: HTMLDivElement | HTMLCanvasElement | string,\n  type: 'css3' | 'canvas'\n): HTMLDivElement | HTMLCanvasElement {\n  const $ = document.querySelector\n  let _el = typeof el === 'string' ? $(el) : el\n  if (type === 'canvas' && !isCanvas(_el)) {\n    throwElError('canvas')\n  }\n  if (type === 'css3' && !isDiv(_el)) {\n    throwElError('css3')\n  }\n\n  return _el as HTMLCanvasElement | HTMLDivElement\n\n  function throwElError(type: 'canvas' | 'css3'): never {\n    const EL_TYPE = type === 'canvas' ? 'HTMLCanvasElement' : 'HTMLDivElement'\n    throw new Error(`Engine Error: el is not a ${EL_TYPE} instance.(engine: ${type})`)\n  }\n}\n\nexport const requestAnimationFrame =\n  window.requestAnimationFrame || window.webkitRequestAnimationFrame\n\nexport const cancelAnimationFrame = window.cancelAnimationFrame || window.webkitCancelAnimationFrame\n\nexport const isFunction = function(fn: any): fn is Function {\n  return typeof fn === 'function'\n}\n\nexport const isNull = function(o: any): o is null {\n  return o === null\n}\n\nexport const isUndefined = function(o: any): o is undefined {\n  return typeof o === 'undefined'\n}\n\nexport const isObject = function(o: any): o is object {\n  return typeof o === 'object' && o !== null\n}\n\nexport function deepMerge(...objects: any[]): any {\n  const ret: any = {}\n  objects.forEach(obj => {\n    if (isNull(obj) || isUndefined(obj)) {\n      return\n    }\n    Object.keys(obj).forEach((key: string) => {\n      if (!ret.hasOwnProperty(key)) {\n        ret[key] = obj[key]\n      } else {\n        if (Array.isArray(obj[key])) {\n          ret[key] = obj[key]\n        } else if (isObject(obj[key])) {\n          ret[key] = deepMerge(ret[key], obj[key])\n        } else {\n          ret[key] = obj[key]\n        }\n      }\n    })\n  })\n  return ret\n}\n\nexport function isScrollBarrage(x: any): x is ScrollBarrageObject {\n  return x.hasOwnProperty('speed') && x.hasOwnProperty('offset')\n}\n\nexport function isFixedBarrage(x: any): x is FixedBarrageObejct {\n  return x.hasOwnProperty('duration')\n}\n","interface EventMap {\n  [x: string]: Array<EventHandler>\n}\n\ninterface EventHandler {\n  (...args: any[]): any\n}\n\nexport default class EventEmitter {\n  private _eventsMap: EventMap = {}\n\n  $on(eventName: string, handler: EventHandler) {\n    const eventsMap = this._eventsMap\n    const handlers = eventsMap[eventName] || (eventsMap[eventName] = [])\n    handlers.push(handler)\n    return this\n  }\n\n  $once(eventName: string, handler: EventHandler) {\n    const eventsMap = this._eventsMap\n    const handlers = eventsMap[eventName] || (eventsMap[eventName] = [])\n    const self = this\n    const fn = function(...args: any[]) {\n      handler(...args)\n      self.$off(eventName, fn)\n    }\n    handlers.push(fn)\n    return this\n  }\n\n  $off(eventName: string, handler?: EventHandler) {\n    const eventsMap = this._eventsMap\n    if (!handler) {\n      eventsMap[eventName].length = 0\n      return this\n    }\n\n    const handlers = eventsMap[eventName]\n    if (!handlers) {\n      return this\n    }\n\n    const index = handlers.indexOf(handler)\n    if (index !== -1) {\n      handlers.splice(index, 1)\n    }\n\n    return this\n  }\n\n  $emit(eventName: string, ...args: any[]) {\n    const eventsMap = this._eventsMap\n    const handlers = eventsMap[eventName]\n    if (Array.isArray(handlers)) {\n      handlers.forEach(fn => fn(...args))\n    }\n  }\n}\n","import { BarrageObject } from './types'\r\nimport { isScrollBarrage } from './helper'\r\n\r\ninterface TrackForEachHandler<T extends BarrageObject> {\r\n  (track: T, index: number, array: T[]): void\r\n}\r\n\r\nexport default class BarrageTrack<T extends BarrageObject> {\r\n  barrages: T[] = []\r\n  offset: number = 0\r\n\r\n  forEach(handler: TrackForEachHandler<T>) {\r\n    for (let i = 0; i < this.barrages.length; ++i) {\r\n      handler(this.barrages[i], i, this.barrages)\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.barrages = []\r\n    this.offset = 0\r\n  }\r\n\r\n  push(...items: T[]) {\r\n    this.barrages.push(...items)\r\n  }\r\n\r\n  removeTop() {\r\n    this.barrages.shift()\r\n  }\r\n\r\n  updateOffset() {\r\n    const endBarrage = this.barrages[this.barrages.length - 1]\r\n    if (endBarrage && isScrollBarrage(endBarrage)) {\r\n      const { speed } = endBarrage\r\n      this.offset -= speed\r\n    }\r\n  }\r\n}\r\n","import { BarrageObject, CommanderConfig } from '../types'\nimport Track from '../track'\n\ninterface CommanderForEachHandler<T extends BarrageObject> {\n  (track: Track<T>, index: number, array: Track<T>[]): void\n}\n\nexport default abstract class BaseCommander<T extends BarrageObject> {\n  protected trackWidth: number\n  protected trackHeight: number\n  protected duration: number\n  protected tracks: Track<T>[] = []\n  waitingQueue: T[] = []\n\n  constructor(config: CommanderConfig) {\n    this.trackWidth = config.trackWidth\n    this.trackHeight = config.trackHeight\n    this.duration = config.duration\n\n    for (let i = 0; i < config.maxTrack; ++i) {\n      this.tracks[i] = new Track()\n    }\n  }\n\n  forEach(handler: CommanderForEachHandler<T>) {\n    for (let i = 0; i < this.tracks.length; ++i) {\n      handler(this.tracks[i], i, this.tracks)\n    }\n  }\n\n  reset() {\n    this.forEach(track => track.reset())\n  }\n\n  resize(width?: number, height?: number) {\n    if (width) {\n      this.trackWidth = width\n    }\n    if (height) {\n      this.trackHeight = height\n    }\n  }\n\n  // 添加弹幕到等待队列\n  abstract add(barrage: T): boolean\n  // 寻找合适的轨道\n  abstract _findTrack(): number\n  // 从等待队列中抽取弹幕并放入弹幕\n  abstract _extractBarrage(): void\n  // 渲染函数\n  abstract render(): void\n}\n","import BaseCommander from '../base'\nimport { BarrageObject, CommanderConfig } from '../../types'\n\nexport default abstract class BaseCanvasCommander<T extends BarrageObject> extends BaseCommander<\n  T\n> {\n  protected canvas: HTMLCanvasElement\n  protected ctx: CanvasRenderingContext2D\n\n  constructor(canvas: HTMLCanvasElement, config: CommanderConfig) {\n    super(config)\n    this.canvas = canvas\n    this.ctx = canvas.getContext('2d')!\n  }\n}\n","import BaseCanvasCommander from './base-canvas'\nimport { FixedBarrageObejct, CommanderConfig } from '../../types'\nimport { isEmptyArray } from '../../helper'\n\nexport default abstract class BaseFixedCommander extends BaseCanvasCommander<FixedBarrageObejct> {\n  constructor(canvas: HTMLCanvasElement, config: CommanderConfig) {\n    super(canvas, config)\n  }\n\n  add(barrage: FixedBarrageObejct): boolean {\n    const trackId = this._findTrack()\n    if (trackId === -1) {\n      return false\n    }\n\n    const track = this.tracks[trackId]\n    const trackWidth = this.trackWidth\n    const { width } = barrage\n    const barrageOffset = (trackWidth - width) / 2\n    const normalizedBarrage = Object.assign({}, barrage, {\n      offset: barrageOffset,\n      duration: this.duration\n    })\n    track.push(normalizedBarrage)\n    return true\n  }\n\n  _findTrack(): number {\n    let idx = -1\n    for (let i = 0; i < this.tracks.length; ++i) {\n      if (isEmptyArray(this.tracks[i].barrages)) {\n        idx = i\n        break\n      }\n    }\n    return idx\n  }\n\n  _extractBarrage(): void {\n    let isIntered: boolean\n    for (let i = 0; i < this.waitingQueue.length; ) {\n      isIntered = this.add(this.waitingQueue[i])\n      if (!isIntered) {\n        break\n      }\n      this.waitingQueue.shift()\n    }\n  }\n}\n","import { CommanderMapKey } from '../types'\n\nexport const HTML_ELEMENT_NATIVE_EVENTS = 'click,dblclick,mousedown,mousemove,mouseout,mouseover,mouseup'.split(\n  ','\n)\n\ninterface BarrageTypeObject {\n  SCROLL: CommanderMapKey\n  FIXED_TOP: CommanderMapKey\n  FIXED_BOTTOM: CommanderMapKey\n}\n\nexport const BARRAGE_TYPE: BarrageTypeObject = {\n  SCROLL: 'scroll',\n  FIXED_TOP: 'fixed-top',\n  FIXED_BOTTOM: 'fixed-bottom'\n}\n\nexport const TIME_PER_FRAME = 16.6\n","import BaseFixedCommander from './base-fixed'\nimport { TIME_PER_FRAME } from '../../constants'\nimport { CommanderConfig } from '../../types'\n\nexport default class FixedTopCommander extends BaseFixedCommander {\n  constructor(canvas: HTMLCanvasElement, config: CommanderConfig) {\n    super(canvas, config)\n  }\n\n  render(): void {\n    this._extractBarrage()\n    const ctx = this.ctx\n    const trackHeight = this.trackHeight\n    this.tracks.forEach((track, index) => {\n      const barrage = track.barrages[0]\n      if (!barrage) {\n        return\n      }\n      const { color, text, offset, size } = barrage\n      ctx.fillStyle = color\n      ctx.font = `${size}px 'Microsoft Yahei'`\n      ctx.fillText(text, offset, (index + 1) * trackHeight)\n      barrage.duration -= TIME_PER_FRAME\n      if (barrage.duration <= 0) {\n        track.removeTop()\n      }\n    })\n  }\n}\n","import BaseFixedCommander from './base-fixed'\nimport { TIME_PER_FRAME } from '../../constants'\nimport { CommanderConfig } from '../../types'\n\nexport default class FixedBottomCommander extends BaseFixedCommander {\n  constructor(canvas: HTMLCanvasElement, config: CommanderConfig) {\n    super(canvas, config)\n  }\n\n  render(): void {\n    this._extractBarrage()\n    const ctx = this.ctx\n    const trackHeight = this.trackHeight\n    const canvasHeight = this.canvas.height\n    const startY = canvasHeight - this.trackHeight * this.tracks.length\n    this.tracks.forEach((track, index) => {\n      const barrage = track.barrages[0]\n      if (!barrage) {\n        return\n      }\n      const { color, text, offset, size } = barrage\n      ctx.fillStyle = color\n      ctx.font = `${size}px 'Microsoft Yahei'`\n      ctx.fillText(text, offset, startY + index * trackHeight)\n      barrage.duration -= TIME_PER_FRAME\n      if (barrage.duration <= 0) {\n        track.removeTop()\n      }\n    })\n  }\n}\n","import BaseCanvasCommander from './base-canvas'\nimport { ScrollBarrageObject, CommanderConfig } from '../../types'\nimport { isEmptyArray, getArrayRight } from '../../helper'\nimport { TIME_PER_FRAME } from '../../constants'\nimport Track from '../../track'\n\nexport default class RollingCommander extends BaseCanvasCommander<ScrollBarrageObject> {\n  constructor(canvas: HTMLCanvasElement, config: CommanderConfig) {\n    super(canvas, config)\n  }\n\n  private get _defaultSpeed(): number {\n    return (this.trackWidth / this.duration) * TIME_PER_FRAME\n  }\n\n  private get _randomSpeed(): number {\n    return 0.8 + Math.random() * 1.3\n  }\n\n  add(barrage: ScrollBarrageObject): boolean {\n    const trackId = this._findTrack()\n    if (trackId === -1) {\n      return false\n    }\n\n    const track = this.tracks[trackId]\n    const trackOffset = track.offset\n    const trackWidth = this.trackWidth\n    let speed: number\n    if (isEmptyArray(track.barrages)) {\n      speed = this._defaultSpeed * this._randomSpeed\n    } else {\n      const { speed: preSpeed } = getArrayRight<ScrollBarrageObject>(track.barrages)\n      speed = (trackWidth * preSpeed) / trackOffset\n    }\n    speed = Math.min(speed, this._defaultSpeed * 2)\n    const normalizedBarrage = Object.assign({}, barrage, {\n      offset: trackWidth,\n      speed\n    })\n    track.push(normalizedBarrage)\n    track.offset = trackWidth + barrage.width * 1.2\n    return true\n  }\n\n  _findTrack(): number {\n    let idx = -1\n    let max = -Infinity\n    this.forEach((track, index) => {\n      const trackOffset = track.offset\n      if (trackOffset > this.trackWidth) {\n        return\n      }\n      const t = this.trackWidth - trackOffset\n      if (t > max) {\n        idx = index\n        max = t\n      }\n    })\n    return idx\n  }\n\n  _extractBarrage(): void {\n    let isIntered: boolean\n    for (let i = 0; i < this.waitingQueue.length; ) {\n      isIntered = this.add(this.waitingQueue[i])\n      if (!isIntered) {\n        break\n      }\n      this.waitingQueue.shift()\n    }\n  }\n\n  render(): void {\n    this._extractBarrage()\n    const ctx = this.ctx\n    const trackHeight = this.trackHeight\n    this.forEach((track: Track<ScrollBarrageObject>, trackIndex) => {\n      let removeTop = false\n      track.forEach((barrage, barrageIndex) => {\n        const { color, text, offset, speed, width, size } = barrage\n        ctx.fillStyle = color\n        ctx.font = `${size}px 'Microsoft Yahei'`\n        ctx.fillText(text, offset, (trackIndex + 1) * trackHeight)\n        barrage.offset -= speed\n        if (barrageIndex === 0 && barrage.offset < 0 && Math.abs(barrage.offset) >= width) {\n          removeTop = true\n        }\n      })\n      track.updateOffset()\n      if (removeTop) {\n        track.removeTop()\n      }\n    })\n  }\n}\n","import FixedTopCommander from './fixed-top'\nimport FixedBottomCommander from './fixed-bottom'\nimport RollingCommander from './rolling'\nimport { RenderEngine } from '../../types'\n\nconst engine: RenderEngine = {\n  FixedBottomCommander,\n  FixedTopCommander,\n  RollingCommander\n}\n\nexport default engine\n","import BaseCommander from '../base';\r\nimport { BarrageObject, CommanderConfig } from '../../types';\r\n\r\nexport default abstract class BaseCssCommander<T extends BarrageObject> extends BaseCommander<T> {\r\n  el: HTMLDivElement;\r\n\r\n  constructor(el: HTMLDivElement, config: CommanderConfig) {\r\n    super(config);\r\n\r\n    this.el = el;\r\n  }\r\n\r\n  removeElement(target: HTMLElement) {\r\n    this.el.removeChild(target);\r\n  }\r\n}","import BaseCssCommander from './base-css';\r\nimport { CommanderConfig, FixedBarrageObejct } from '../../types';\r\nimport Track from '../../track';\r\nimport { isEmptyArray } from '../../helper';\r\n\r\nexport default abstract class BaseFixedCssCommander extends BaseCssCommander<FixedBarrageObejct> {\r\n  // FixedBarrageObejct ---> HTML 的映射\r\n  objToElm: WeakMap<FixedBarrageObejct, HTMLElement> = new WeakMap()\r\n  \r\n  constructor(el: HTMLDivElement, config: CommanderConfig) {\r\n    super(el, config);\r\n  }\r\n\r\n  add(barrage: FixedBarrageObejct): boolean {\r\n    const trackId = this._findTrack()\r\n    if (trackId === -1) {\r\n      return false\r\n    }\r\n\r\n    const track = this.tracks[trackId]\r\n    const trackWidth = this.trackWidth\r\n    const { width } = barrage\r\n    const barrageOffset = (trackWidth - width) / 2\r\n    const normalizedBarrage = Object.assign({}, barrage, {\r\n      offset: barrageOffset,\r\n      duration: this.duration\r\n    })\r\n    track.push(normalizedBarrage)\r\n    return true\r\n  }\r\n\r\n  _findTrack(): number {\r\n    let idx = -1\r\n    for (let i = 0; i < this.tracks.length; ++i) {\r\n      if (isEmptyArray(this.tracks[i].barrages)) {\r\n        idx = i\r\n        break\r\n      }\r\n    }\r\n    return idx\r\n  }\r\n\r\n  _extractBarrage(): void {\r\n    let isIntered: boolean\r\n    for (let i = 0; i < this.waitingQueue.length; ) {\r\n      isIntered = this.add(this.waitingQueue[i])\r\n      if (!isIntered) {\r\n        break\r\n      }\r\n      this.waitingQueue.shift()\r\n    }\r\n  }\r\n\r\n  _removeTopElementFromTrack(track: Track<FixedBarrageObejct>) {\r\n    const barrage = track.barrages[0];\r\n    if (!barrage) {\r\n      return;\r\n    }\r\n    const el = this.objToElm.get(barrage)!;\r\n    this.objToElm.delete(barrage);\r\n    this.removeElement(el);\r\n  }\r\n}","export function createElement(tagName: string) {\r\n  return document.createElement(tagName);\r\n}\r\n\r\nexport function createBarrage(text: string, color: string, fontSize: string, left: string) {\r\n  const danmu = createElement('div');\r\n  setStyle(danmu, {\r\n    position: 'absolute',\r\n    color,\r\n    fontSize,\r\n    transform: `translateX(${left}px)`\r\n  });\r\n  danmu.textContent = text;\r\n  return danmu;\r\n}\r\n\r\nexport function appendChild(parent: HTMLElement, child: HTMLElement) {\r\n  return parent.appendChild(child);\r\n}\r\n\r\nexport function setStyle(el: HTMLElement, style: Partial<CSSStyleDeclaration>) {\r\n  for(const key in style) {\r\n    el.style[key] = style[key]!;\r\n  }\r\n}","import BaseFixedCommander from './base-fixed'\nimport { TIME_PER_FRAME } from '../../constants'\nimport { CommanderConfig } from '../../types'\nimport { createBarrage } from '../../helper/css';\n\nexport default class FixedTopCommander extends BaseFixedCommander {\n  constructor(el: HTMLDivElement, config: CommanderConfig) {\n    super(el, config);\n  }\n\n  render(): void {\n    this._extractBarrage()\n    const objToElm = this.objToElm;\n    const trackHeight = this.trackHeight\n    this.tracks.forEach((track, index) => {\n      const barrage = track.barrages[0]\n      if (!barrage) {\n        return\n      }\n      let el = objToElm.get(barrage);\n      if (!el) {\n        const { text, color, size } = barrage;\n        el = createBarrage(text, color, size + 'px', '50%');\n        const y = index * trackHeight + 'px';\n        el.style.transform = `translate(-50%, ${y})`;\n        objToElm.set(barrage, el);\n      } else {\n        barrage.duration -= TIME_PER_FRAME\n        if (barrage.duration <= 0) {\n          this._removeTopElementFromTrack(track);\n          track.removeTop()\n        }\n      }\n    })\n  }\n}\n","import BaseCssCommander from './base-css';\r\nimport { ScrollBarrageObject, CommanderConfig } from '../../types';\r\nimport { isEmptyArray, getArrayRight } from '../../helper';\r\nimport { TIME_PER_FRAME } from '../../constants';\r\nimport Track from '../../track';\r\nimport { createBarrage, appendChild } from '../../helper/css';\r\n\r\nexport default class RollingCssCommander extends BaseCssCommander<ScrollBarrageObject> {\r\n  // ScrollBarrageObject ---> HTML 的映射\r\n  objToElm: WeakMap<ScrollBarrageObject, HTMLElement> = new WeakMap()\r\n  \r\n  constructor(el: HTMLDivElement, config: CommanderConfig) {\r\n    super(el, config);\r\n  }\r\n\r\n  private get _defaultSpeed(): number {\r\n    return (this.trackWidth / this.duration) * TIME_PER_FRAME\r\n  }\r\n\r\n  private get _randomSpeed(): number {\r\n    return 0.8 + Math.random() * 1.3\r\n  }\r\n\r\n  add(barrage: ScrollBarrageObject): boolean {\r\n    const trackId = this._findTrack()\r\n    if (trackId === -1) {\r\n      return false\r\n    }\r\n    // 创建弹幕DOM\r\n    const { text, size, color, offset } = barrage;\r\n    const fontSize = size + 'px';\r\n    const posLeft = offset + 'px';\r\n    const danmu = createBarrage(text, color, fontSize, posLeft);\r\n    appendChild(this.el, danmu);\r\n    const width = danmu.offsetWidth;\r\n\r\n    // 计算弹幕速度\r\n    const track = this.tracks[trackId]\r\n    const trackOffset = track.offset\r\n    const trackWidth = this.trackWidth\r\n    let speed: number\r\n    if (isEmptyArray(track.barrages)) {\r\n      speed = this._defaultSpeed * this._randomSpeed\r\n    } else {\r\n      const { speed: preSpeed } = getArrayRight<ScrollBarrageObject>(track.barrages)\r\n      speed = (trackWidth * preSpeed) / trackOffset\r\n    }\r\n    speed = Math.min(speed, this._defaultSpeed * 2)\r\n    const normalizedBarrage = Object.assign({}, barrage, {\r\n      offset: trackWidth,\r\n      speed,\r\n      width\r\n    })\r\n    this.objToElm.set(normalizedBarrage, danmu);\r\n    track.push(normalizedBarrage)\r\n    track.offset = trackWidth + normalizedBarrage.width * 1.2\r\n    return true\r\n  }\r\n\r\n  _findTrack(): number {\r\n    let idx = -1\r\n    let max = -Infinity\r\n    this.forEach((track, index) => {\r\n      const trackOffset = track.offset\r\n      if (trackOffset > this.trackWidth) {\r\n        return\r\n      }\r\n      const t = this.trackWidth - trackOffset\r\n      if (t > max) {\r\n        idx = index\r\n        max = t\r\n      }\r\n    })\r\n    return idx\r\n  }\r\n\r\n  _extractBarrage(): void {\r\n    let isIntered: boolean\r\n    for (let i = 0; i < this.waitingQueue.length; ) {\r\n      isIntered = this.add(this.waitingQueue[i])\r\n      if (!isIntered) {\r\n        break\r\n      }\r\n      this.waitingQueue.shift()\r\n    }\r\n  }\r\n\r\n  render(): void {\r\n    this._extractBarrage();\r\n    const objToElm = this.objToElm;\r\n    const trackHeight = this.trackHeight;\r\n    this.forEach((track: Track<ScrollBarrageObject>, trackIndex: number) => {\r\n      let removeTop = false;\r\n      track.forEach((barrage, barrageIndex) => {\r\n        if (!objToElm.has(barrage)) {\r\n          return;\r\n        }\r\n        const el = objToElm.get(barrage)!;\r\n        const offset = barrage.offset;\r\n        el.style.transform = `translate(${offset}px, ${trackIndex * trackHeight}px)`;\r\n        barrage.offset -= barrage.speed;\r\n        if (barrageIndex === 0 && barrage.offset < 0 && Math.abs(barrage.offset) > barrage.width) {\r\n          removeTop = true;\r\n        }\r\n      });\r\n      track.updateOffset();\r\n      if (removeTop) {\r\n        this._removeTopElementFromTrack(track);\r\n        track.removeTop();\r\n      }\r\n    });\r\n  }\r\n\r\n  _removeTopElementFromTrack(track: Track<ScrollBarrageObject>) {\r\n    const barrage = track.barrages[0];\r\n    if (!barrage) {\r\n      return;\r\n    }\r\n    const el = this.objToElm.get(barrage)!;\r\n    this.objToElm.delete(barrage);\r\n    this.removeElement(el);\r\n  }\r\n}","import FixedTopCommander from './fixed-top'\r\nimport RollingCommander from './rolling'\r\nimport { RenderEngine } from '../../types'\r\n\r\nconst engine: RenderEngine = {\r\n  FixedTopCommander,\r\n  FixedBottomCommander: FixedTopCommander,\r\n  RollingCommander\r\n}\r\n\r\nexport default engine\r\n","import CanvasEngine from './canvas'\nimport CssEngine from './css-renderer'\nimport { RenderEngine } from '../types'\n\nexport function getEngine(type: string): RenderEngine | null {\n  if (type === 'canvas') {\n    return CanvasEngine\n  }\n  if (type === 'css3') {\n    return CssEngine\n  }\n  return null\n}\n","import BarrageMaker from '../a-barrage'\nimport { HTML_ELEMENT_NATIVE_EVENTS } from '../constants'\n\nexport function injectNativeEvents(instance: BarrageMaker): void {\n  HTML_ELEMENT_NATIVE_EVENTS.map(eventName => {\n    instance.el.addEventListener(eventName, event => {\n      instance.$emit(eventName, event)\n    })\n  })\n}\n\nexport function injectEventsDelegator(instance: BarrageMaker): void {\n  const proxyObject = instance.config.proxyObject\n  if (!(proxyObject instanceof HTMLElement)) {\n    return\n  }\n  type MouseEventName =\n    | 'click'\n    | 'dblclick'\n    | 'mousedown'\n    | 'mousemove'\n    | 'mouseout'\n    | 'mouseover'\n    | 'mouseup'\n  HTML_ELEMENT_NATIVE_EVENTS.map(eventName => {\n    // ! 如果是联合类型 HtmlDivElement | HtmlCanvasElement 的话第二个参数会报错\n    // ! 所以这里先用类型断言搞一搞\n    ;(instance.el as HTMLElement).addEventListener(eventName as MouseEventName, (e: MouseEvent) => {\n      const event = new MouseEvent(eventName, {\n        view: window,\n        relatedTarget: proxyObject,\n        altKey: e.altKey,\n        button: e.button,\n        buttons: e.buttons,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        ctrlKey: e.ctrlKey,\n        metaKey: e.metaKey,\n        movementX: e.movementX,\n        movementY: e.movementY,\n        screenX: e.screenX,\n        screenY: e.screenY,\n        shiftKey: e.shiftKey\n      })\n      proxyObject.dispatchEvent(event)\n    })\n  })\n}\n","import BarrageMaker from '../a-barrage'\nimport {\n  RawBarrageObject,\n  CommanderMapKey,\n  ScrollBarrageObject,\n  FixedBarrageObejct\n} from '../types'\n\nexport default {\n  clear(this: BarrageMaker) {\n    const { width, height } = this.canvas!\n    this._forEachManager(manager => manager.reset())\n    this.ctx!.clearRect(0, 0, width, height)\n  },\n  add(this: BarrageMaker, barrage: RawBarrageObject, type: CommanderMapKey = 'scroll') {\n    const { text, color, size } = barrage\n    const ctx = this.ctx!\n    const fontSize = (size || this.config.fontSize) * this.config.zoom\n    const fontColor = color || this.config.fontColor\n\n    ctx.font = `${fontSize}px 'Microsoft Yahei'`\n    const { width } = ctx.measureText(text)\n    if (type === 'scroll') {\n      const barrageObject: ScrollBarrageObject = {\n        text,\n        width,\n        color: fontColor,\n        size: fontSize,\n        speed: 0,\n        offset: 0\n      }\n      this.commanderMap[type].waitingQueue.push(barrageObject)\n    } else {\n      const barrageObject: FixedBarrageObejct = {\n        text,\n        width,\n        color: fontColor,\n        size: fontSize,\n        duration: 0,\n        offset: 0\n      }\n      this.commanderMap[type].waitingQueue.push(barrageObject)\n    }\n  },\n  _render(this: BarrageMaker) {\n    const ctx = this.ctx!\n    const canvas = this.canvas!\n    ctx.shadowBlur = 2\n    ctx.shadowColor = 'rgba(0, 0, 0, 0.8)'\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n    this._forEachManager(manager => manager.render())\n\n    this.animation = requestAnimationFrame(this._render.bind(this))\n  }\n}\n","import BarrageMaker from '../a-barrage'\nimport { RawBarrageObject, CommanderMapKey, ScrollBarrageObject } from '../types'\n// import { createBarrage, appendChild } from '../helper/css';\n// import RollingCssCommander from '../commander/css-renderer/rolling';\nimport { requestAnimationFrame } from '../helper';\n\nexport default {\n  clear(this: BarrageMaker) {},\n  add(this: BarrageMaker, barrage: RawBarrageObject, type: CommanderMapKey = 'scroll') {\n    const { text, color = this.config.fontColor, size = this.config.fontSize } = barrage;\n    const fontColor = color;\n    // const fontSize = size + 'px';\n    const trackWidth = this.el.offsetWidth;\n    // const posLeft = trackWidth + 'px';\n    \n    // const danmu = createBarrage(text, fontColor, fontSize, posLeft);\n    // appendChild(this.el, danmu);\n    // const width = danmu.offsetWidth;\n    if (type === 'scroll') {\n      const barrageObject: ScrollBarrageObject = {\n        text,\n        width: 0,\n        color: fontColor,\n        size: size,\n        speed: 0,\n        offset: trackWidth\n      };\n      // (this.commanderMap[type] as RollingCssCommander).objToElm.set(barrageObject, danmu);\n      this.commanderMap[type].waitingQueue.push(barrageObject);\n    }\n  },\n  _render(this: BarrageMaker) {\n    this._forEachManager(manager => manager.render());\n\n    this.animation = requestAnimationFrame(this._render.bind(this));\n  }\n}\n","import { RawBarrageObject, CommanderMapKey } from '../types'\nimport CanvasStragy from './canvas'\nimport Css3Stragy from './css3'\n\nexport interface FnMap {\n  clear(): void\n  add(barrage: RawBarrageObject, type: CommanderMapKey): void\n  _render(): void\n}\n\ntype FnMapKey = keyof FnMap\n\nexport function getHandler(engine: 'canvas' | 'css3', fn: FnMapKey) {\n  const fnMap: FnMap = engine === 'canvas' ? CanvasStragy : Css3Stragy\n  return fnMap[fn]\n}\n","import {\n  BarrageConfig,\n  RawBarrageObject,\n  CommanderMap,\n  CommanderMapKey,\n  ScrollBarrageObject,\n  FixedBarrageObejct\n} from './types'\nimport { getEl, requestAnimationFrame, cancelAnimationFrame, deepMerge, isCanvas, isDiv } from './helper'\nimport EventEmitter from './event-emitter'\nimport { getEngine } from './commander'\nimport BaseCommander from './commander/base'\nimport { injectNativeEvents, injectEventsDelegator } from './event'\nimport { getHandler, FnMap } from './stragy'\n\nconst defaultConfig: BarrageConfig = {\n  engine: 'canvas',\n  zoom: 1,\n  proxyObject: null,\n  usePointerEvents: true,\n  maxTrack: 4,\n  fontSize: 20,\n  fontColor: '#fff',\n  duration: 10000,\n  trackHeight: 20 * 1.5\n}\n\ntype BarrageConfigInit = Partial<BarrageConfig>\n\nexport default class BarrageMaker extends EventEmitter {\n  el: HTMLDivElement | HTMLCanvasElement\n  canvas: HTMLCanvasElement | null = null\n  ctx: CanvasRenderingContext2D | null = null\n  config: BarrageConfig\n  commanderMap: CommanderMap\n  animation: number | null = null\n\n  constructor(el: HTMLDivElement | HTMLCanvasElement | string, config?: BarrageConfigInit) {\n    super()\n\n    this.config = deepMerge(defaultConfig, config || {})\n\n    this.el = getEl(el, this.config.engine)\n\n    if (isCanvas(this.el)) {\n      this.canvas = this.el\n      this.ctx = this.canvas.getContext('2d')!\n    }\n\n    // 兼容性：IE11+ / 非IE基本全支持\n    // pointer-events 避免上层canvas阻碍下层点击\n    if (this.config.usePointerEvents) {\n      this.el.style.pointerEvents = 'none'\n    }\n\n    // 获取渲染引擎\n    const renderEngine = getEngine(this.config.engine)!\n    const commanderConfig = {\n      trackWidth: this.el.offsetWidth,\n      trackHeight: this.config.trackHeight,\n      maxTrack: this.config.maxTrack,\n      duration: this.config.duration\n    }\n\n    const rootEle = this.config.engine === 'canvas' ? this.canvas : this.el;\n    this.commanderMap = {\n      scroll: new renderEngine.RollingCommander(rootEle, commanderConfig),\n      'fixed-top': new renderEngine.FixedTopCommander(rootEle, commanderConfig),\n      'fixed-bottom': new renderEngine.FixedBottomCommander(rootEle, commanderConfig)\n    }\n\n    this.resize()\n\n    // 注入事件控制逻辑\n    injectNativeEvents(this)\n    injectEventsDelegator(this)\n  }\n\n  resize(width?: number) {\n    width = width || this.el.offsetWidth\n    this._forEachManager(manager => manager.resize(width))\n  }\n\n  clear() {\n    const fn = getHandler(this.config.engine, 'clear') as FnMap['clear']\n    return fn.call(this)\n  }\n\n  setOpacity(opacity: number = 1) {\n    this.el.style.opacity = `${opacity}`\n  }\n\n  setFontSize(zoom: number = 1) {\n    this.config.zoom = zoom\n  }\n\n  add(barrage: RawBarrageObject, type: CommanderMapKey = 'scroll') {\n    const fn = getHandler(this.config.engine, 'add') as FnMap['add']\n    return fn.call(this, barrage, type)\n  }\n\n  start() {\n    if (this.animation) {\n      return\n    }\n    this.animation = requestAnimationFrame(this._render.bind(this))\n  }\n\n  stop() {\n    if (!this.animation) {\n      return\n    }\n    cancelAnimationFrame(this.animation)\n    this.animation = null\n  }\n\n  _forEachManager(\n    handler: (\n      commander: BaseCommander<ScrollBarrageObject> | BaseCommander<FixedBarrageObejct>\n    ) => any\n  ) {\n    Object.keys(this.commanderMap).forEach(key =>\n      handler.call(this, this.commanderMap[key as CommanderMapKey])\n    )\n  }\n\n  _render() {\n    const fn = getHandler(this.config.engine, '_render') as FnMap['_render']\n    return fn.call(this)\n  }\n}\n"],"names":["requestAnimationFrame","Track","BaseFixedCommander","engine","FixedTopCommander","CanvasEngine","CssEngine"],"mappings":"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"}