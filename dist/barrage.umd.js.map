{"version":3,"file":"barrage.umd.js","sources":["../src/helper/index.ts","../src/event-emitter.ts","../src/track.ts","../src/commander/base.ts","../src/commander/canvas/base-canvas.ts","../src/commander/canvas/base-fixed.ts","../src/constants/index.ts","../src/commander/canvas/fixed-top.ts","../src/commander/canvas/fixed-bottom.ts","../src/commander/canvas/rolling.ts","../src/commander/canvas/index.ts","../src/helper/css.ts","../src/commander/css-renderer/base-css.ts","../src/commander/css-renderer/base-fixed.ts","../src/commander/css-renderer/fixed-top.ts","../src/commander/css-renderer/rolling.ts","../src/commander/css-renderer/fixed-bottom.ts","../src/commander/css-renderer/index.ts","../src/commander/index.ts","../src/event/index.ts","../src/stragy/canvas.ts","../src/stragy/css3.ts","../src/stragy/index.ts","../src/a-barrage.ts"],"sourcesContent":["import { ScrollBarrageObject, FixedBarrageObejct } from '../types'\r\n\r\nexport function isEmptyArray<T>(array: T[]): boolean {\r\n  return array.length === 0\r\n}\r\n\r\nexport function getArrayRight<T>(array: T[]): T {\r\n  return array[array.length - 1]\r\n}\r\n\r\nexport function isDiv(el: any): el is HTMLDivElement {\r\n  return el instanceof HTMLDivElement\r\n}\r\n\r\nexport function isCanvas(el: any): el is HTMLCanvasElement {\r\n  return el instanceof HTMLCanvasElement\r\n}\r\n\r\nexport function getEl(\r\n  el: HTMLDivElement | HTMLCanvasElement | string,\r\n  type: 'css3' | 'canvas'\r\n): HTMLDivElement | HTMLCanvasElement {\r\n  const $ = document.querySelector\r\n  let _el = typeof el === 'string' ? $(el) : el\r\n  if (type === 'canvas' && !isCanvas(_el)) {\r\n    throwElError('canvas')\r\n  }\r\n  if (type === 'css3' && !isDiv(_el)) {\r\n    throwElError('css3')\r\n  }\r\n\r\n  return _el as HTMLCanvasElement | HTMLDivElement\r\n\r\n  function throwElError(type: 'canvas' | 'css3'): never {\r\n    const EL_TYPE = type === 'canvas' ? 'HTMLCanvasElement' : 'HTMLDivElement'\r\n    throw new Error(`Engine Error: el is not a ${EL_TYPE} instance.(engine: ${type})`)\r\n  }\r\n}\r\n\r\nexport const requestAnimationFrame =\r\n  window.requestAnimationFrame || window.webkitRequestAnimationFrame\r\n\r\nexport const cancelAnimationFrame = window.cancelAnimationFrame || window.webkitCancelAnimationFrame\r\n\r\nexport const isFunction = function(fn: any): fn is Function {\r\n  return typeof fn === 'function'\r\n}\r\n\r\nexport const isNull = function(o: any): o is null {\r\n  return o === null\r\n}\r\n\r\nexport const isUndefined = function(o: any): o is undefined {\r\n  return typeof o === 'undefined'\r\n}\r\n\r\nexport const isObject = function(o: any): o is object {\r\n  return typeof o === 'object' && o !== null\r\n}\r\n\r\nexport const isPlainObject = function(o: any): o is object {\r\n  return Object.prototype.toString.call(o) === '[object Object]'\r\n}\r\n\r\nexport function deepMerge(...objects: any[]): any {\r\n  const ret: any = {}\r\n  objects.forEach(obj => {\r\n    if (isNull(obj) || isUndefined(obj)) {\r\n      return\r\n    }\r\n    Object.keys(obj).forEach((key: string) => {\r\n      if (!ret.hasOwnProperty(key)) {\r\n        ret[key] = obj[key]\r\n      } else {\r\n        if (Array.isArray(obj[key])) {\r\n          ret[key] = obj[key]\r\n        } else if (isPlainObject(obj[key])) {\r\n          ret[key] = deepMerge(ret[key], obj[key])\r\n        } else {\r\n          ret[key] = obj[key]\r\n        }\r\n      }\r\n    })\r\n  })\r\n  return ret\r\n}\r\n\r\nexport function isScrollBarrage(x: any): x is ScrollBarrageObject {\r\n  return x.hasOwnProperty('speed') && x.hasOwnProperty('offset')\r\n}\r\n\r\nexport function isFixedBarrage(x: any): x is FixedBarrageObejct {\r\n  return x.hasOwnProperty('duration')\r\n}\r\n","interface EventMap {\n  [x: string]: Array<EventHandler>\n}\n\ninterface EventHandler {\n  (...args: any[]): any\n}\n\nexport default class EventEmitter {\n  private _eventsMap: EventMap = {}\n\n  $on(eventName: string, handler: EventHandler) {\n    const eventsMap = this._eventsMap\n    const handlers = eventsMap[eventName] || (eventsMap[eventName] = [])\n    handlers.push(handler)\n    return this\n  }\n\n  $once(eventName: string, handler: EventHandler) {\n    const eventsMap = this._eventsMap\n    const handlers = eventsMap[eventName] || (eventsMap[eventName] = [])\n    const self = this\n    const fn = function(...args: any[]) {\n      handler(...args)\n      self.$off(eventName, fn)\n    }\n    handlers.push(fn)\n    return this\n  }\n\n  $off(eventName: string, handler?: EventHandler) {\n    const eventsMap = this._eventsMap\n    if (!handler) {\n      eventsMap[eventName].length = 0\n      return this\n    }\n\n    const handlers = eventsMap[eventName]\n    if (!handlers) {\n      return this\n    }\n\n    const index = handlers.indexOf(handler)\n    if (index !== -1) {\n      handlers.splice(index, 1)\n    }\n\n    return this\n  }\n\n  $emit(eventName: string, ...args: any[]) {\n    const eventsMap = this._eventsMap\n    const handlers = eventsMap[eventName]\n    if (Array.isArray(handlers)) {\n      handlers.forEach(fn => fn(...args))\n    }\n  }\n}\n","import { BarrageObject } from './types'\r\nimport { isScrollBarrage } from './helper'\r\n\r\ninterface TrackForEachHandler<T extends BarrageObject> {\r\n  (track: T, index: number, array: T[]): void\r\n}\r\n\r\nexport default class BarrageTrack<T extends BarrageObject> {\r\n  barrages: T[] = []\r\n  offset: number = 0\r\n\r\n  forEach(handler: TrackForEachHandler<T>) {\r\n    for (let i = 0; i < this.barrages.length; ++i) {\r\n      handler(this.barrages[i], i, this.barrages)\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.barrages = []\r\n    this.offset = 0\r\n  }\r\n\r\n  push(...items: T[]) {\r\n    this.barrages.push(...items)\r\n  }\r\n\r\n  removeTop() {\r\n    this.barrages.shift()\r\n  }\r\n\r\n  remove(index: number) {\r\n    if (index < 0 || index >= this.barrages.length) {\r\n      return\r\n    }\r\n    this.barrages.splice(index, 1)\r\n  }\r\n\r\n  updateOffset() {\r\n    const endBarrage = this.barrages[this.barrages.length - 1]\r\n    if (endBarrage && isScrollBarrage(endBarrage)) {\r\n      const { speed } = endBarrage\r\n      this.offset -= speed\r\n    }\r\n  }\r\n}\r\n","import { BarrageObject, CommanderConfig } from '../types'\r\nimport Track from '../track'\r\nimport EventEmitter from '../event-emitter'\r\n\r\ninterface CommanderForEachHandler<T extends BarrageObject> {\r\n  (track: Track<T>, index: number, array: Track<T>[]): void\r\n}\r\n\r\nexport default abstract class BaseCommander<T extends BarrageObject> extends EventEmitter {\r\n  protected trackWidth: number\r\n  protected trackHeight: number\r\n  protected duration: number\r\n  protected maxTrack: number\r\n  protected tracks: Track<T>[] = []\r\n  waitingQueue: T[] = []\r\n\r\n  constructor(config: CommanderConfig) {\r\n    super()\r\n    this.trackWidth = config.trackWidth\r\n    this.trackHeight = config.trackHeight\r\n    this.duration = config.duration\r\n    this.maxTrack = config.maxTrack\r\n\r\n    for (let i = 0; i < config.maxTrack; ++i) {\r\n      this.tracks[i] = new Track()\r\n    }\r\n  }\r\n\r\n  forEach(handler: CommanderForEachHandler<T>) {\r\n    for (let i = 0; i < this.tracks.length; ++i) {\r\n      handler(this.tracks[i], i, this.tracks)\r\n    }\r\n  }\r\n\r\n  // reset() {\r\n  //   this.forEach(track => track.reset())\r\n  // }\r\n\r\n  resize(width?: number, height?: number) {\r\n    if (width) {\r\n      this.trackWidth = width\r\n    }\r\n    if (height) {\r\n      this.trackHeight = height\r\n    }\r\n  }\r\n\r\n  // 添加弹幕到等待队列\r\n  abstract add(barrage: T): boolean\r\n  // 寻找合适的轨道\r\n  abstract _findTrack(): number\r\n  // 从等待队列中抽取弹幕并放入弹幕\r\n  abstract _extractBarrage(): void\r\n  // 渲染函数\r\n  abstract render(): void\r\n  // 清空\r\n  abstract reset(): void\r\n}\r\n","import BaseCommander from '../base'\r\nimport { BarrageObject, CommanderConfig } from '../../types'\r\n\r\nexport default abstract class BaseCanvasCommander<T extends BarrageObject> extends BaseCommander<\r\n  T\r\n> {\r\n  protected canvas: HTMLCanvasElement\r\n  protected ctx: CanvasRenderingContext2D\r\n\r\n  constructor(canvas: HTMLCanvasElement, config: CommanderConfig) {\r\n    super(config)\r\n    this.canvas = canvas\r\n    this.ctx = canvas.getContext('2d')!\r\n  }\r\n\r\n  reset() {\r\n    this.forEach(track => track.reset())\r\n  }\r\n}\r\n","import BaseCanvasCommander from './base-canvas'\r\nimport { FixedBarrageObejct, CommanderConfig } from '../../types'\r\nimport { isEmptyArray } from '../../helper'\r\n\r\nexport default abstract class BaseFixedCommander extends BaseCanvasCommander<FixedBarrageObejct> {\r\n  constructor(canvas: HTMLCanvasElement, config: CommanderConfig) {\r\n    super(canvas, config)\r\n  }\r\n\r\n  add(barrage: FixedBarrageObejct): boolean {\r\n    const trackId = this._findTrack()\r\n    if (trackId === -1) {\r\n      return false\r\n    }\r\n\r\n    const track = this.tracks[trackId]\r\n    const trackWidth = this.trackWidth\r\n    const { width } = barrage\r\n    const barrageOffset = (trackWidth - width) / 2\r\n    const normalizedBarrage = Object.assign({}, barrage, {\r\n      offset: barrageOffset,\r\n      duration: this.duration\r\n    })\r\n    track.push(normalizedBarrage)\r\n    return true\r\n  }\r\n\r\n  _findTrack(): number {\r\n    let idx = -1\r\n    for (let i = 0; i < this.tracks.length; ++i) {\r\n      if (isEmptyArray(this.tracks[i].barrages)) {\r\n        idx = i\r\n        break\r\n      }\r\n    }\r\n    return idx\r\n  }\r\n\r\n  _extractBarrage(): void {\r\n    let isIntered: boolean\r\n    for (let i = 0; i < this.waitingQueue.length; ) {\r\n      isIntered = this.add(this.waitingQueue[i])\r\n      if (!isIntered) {\r\n        break\r\n      }\r\n      this.waitingQueue.shift()\r\n    }\r\n  }\r\n}\r\n","import { CommanderMapKey } from '../types'\r\n\r\nexport const HTML_ELEMENT_NATIVE_EVENTS = 'click,dblclick,mousedown,mousemove,mouseout,mouseover,mouseup'.split(\r\n  ','\r\n)\r\n\r\ninterface BarrageTypeObject {\r\n  SCROLL: CommanderMapKey\r\n  FIXED_TOP: CommanderMapKey\r\n  FIXED_BOTTOM: CommanderMapKey\r\n}\r\n\r\nexport const BARRAGE_TYPE: BarrageTypeObject = {\r\n  SCROLL: 'scroll',\r\n  FIXED_TOP: 'fixed-top',\r\n  FIXED_BOTTOM: 'fixed-bottom'\r\n}\r\n\r\nexport const TIME_PER_FRAME = 16.6\r\n","import BaseFixedCommander from './base-fixed'\r\nimport { TIME_PER_FRAME } from '../../constants'\r\nimport { CommanderConfig } from '../../types'\r\n\r\nexport default class FixedTopCommander extends BaseFixedCommander {\r\n  constructor(canvas: HTMLCanvasElement, config: CommanderConfig) {\r\n    super(canvas, config)\r\n  }\r\n\r\n  render(): void {\r\n    this._extractBarrage()\r\n    const ctx = this.ctx\r\n    const trackHeight = this.trackHeight\r\n    this.tracks.forEach((track, index) => {\r\n      const barrage = track.barrages[0]\r\n      if (!barrage) {\r\n        return\r\n      }\r\n      const { color, text, offset, size } = barrage\r\n      ctx.fillStyle = color\r\n      ctx.font = `${size}px 'Microsoft Yahei'`\r\n      ctx.fillText(text, offset, (index + 1) * trackHeight)\r\n      barrage.duration -= TIME_PER_FRAME\r\n      if (barrage.duration <= 0) {\r\n        track.removeTop()\r\n      }\r\n    })\r\n  }\r\n}\r\n","import BaseFixedCommander from './base-fixed'\r\nimport { TIME_PER_FRAME } from '../../constants'\r\nimport { CommanderConfig } from '../../types'\r\n\r\nexport default class FixedBottomCommander extends BaseFixedCommander {\r\n  constructor(canvas: HTMLCanvasElement, config: CommanderConfig) {\r\n    super(canvas, config)\r\n  }\r\n\r\n  render(): void {\r\n    this._extractBarrage()\r\n    const ctx = this.ctx\r\n    const trackHeight = this.trackHeight\r\n    const canvasHeight = this.canvas.height\r\n    const startY = canvasHeight - this.trackHeight * this.tracks.length\r\n    this.tracks.forEach((track, index) => {\r\n      const barrage = track.barrages[0]\r\n      if (!barrage) {\r\n        return\r\n      }\r\n      const { color, text, offset, size } = barrage\r\n      ctx.fillStyle = color\r\n      ctx.font = `${size}px 'Microsoft Yahei'`\r\n      ctx.fillText(text, offset, startY + index * trackHeight)\r\n      barrage.duration -= TIME_PER_FRAME\r\n      if (barrage.duration <= 0) {\r\n        track.removeTop()\r\n      }\r\n    })\r\n  }\r\n}\r\n","import BaseCanvasCommander from './base-canvas'\r\nimport { ScrollBarrageObject, CommanderConfig } from '../../types'\r\nimport { isEmptyArray, getArrayRight } from '../../helper'\r\nimport { TIME_PER_FRAME } from '../../constants'\r\nimport Track from '../../track'\r\n\r\nexport default class RollingCommander extends BaseCanvasCommander<ScrollBarrageObject> {\r\n  constructor(canvas: HTMLCanvasElement, config: CommanderConfig) {\r\n    super(canvas, config)\r\n  }\r\n\r\n  private get _defaultSpeed(): number {\r\n    return (this.trackWidth / this.duration) * TIME_PER_FRAME\r\n  }\r\n\r\n  private get _randomSpeed(): number {\r\n    return 0.8 + Math.random() * 1.3\r\n  }\r\n\r\n  add(barrage: ScrollBarrageObject): boolean {\r\n    const trackId = this._findTrack()\r\n    if (trackId === -1) {\r\n      return false\r\n    }\r\n\r\n    const track = this.tracks[trackId]\r\n    const trackOffset = track.offset\r\n    const trackWidth = this.trackWidth\r\n    let speed: number\r\n    if (isEmptyArray(track.barrages)) {\r\n      speed = this._defaultSpeed * this._randomSpeed\r\n    } else {\r\n      const { speed: preSpeed } = getArrayRight<ScrollBarrageObject>(track.barrages)\r\n      speed = (trackWidth * preSpeed) / trackOffset\r\n    }\r\n    speed = Math.min(speed, this._defaultSpeed * 2)\r\n    const normalizedBarrage = Object.assign({}, barrage, {\r\n      offset: trackWidth,\r\n      speed\r\n    })\r\n    track.push(normalizedBarrage)\r\n    track.offset = trackWidth + barrage.width * 1.2\r\n    return true\r\n  }\r\n\r\n  _findTrack(): number {\r\n    let idx = -1\r\n    let max = -Infinity\r\n    this.forEach((track, index) => {\r\n      const trackOffset = track.offset\r\n      if (trackOffset > this.trackWidth) {\r\n        return\r\n      }\r\n      const t = this.trackWidth - trackOffset\r\n      if (t > max) {\r\n        idx = index\r\n        max = t\r\n      }\r\n    })\r\n    return idx\r\n  }\r\n\r\n  _extractBarrage(): void {\r\n    let isIntered: boolean\r\n    for (let i = 0; i < this.waitingQueue.length; ) {\r\n      isIntered = this.add(this.waitingQueue[i])\r\n      if (!isIntered) {\r\n        break\r\n      }\r\n      this.waitingQueue.shift()\r\n    }\r\n  }\r\n\r\n  render(): void {\r\n    this._extractBarrage()\r\n    const ctx = this.ctx\r\n    const trackHeight = this.trackHeight\r\n    this.forEach((track: Track<ScrollBarrageObject>, trackIndex) => {\r\n      let removeTop = false\r\n      track.forEach((barrage, barrageIndex) => {\r\n        const { color, text, offset, speed, width, size } = barrage\r\n        ctx.fillStyle = color\r\n        ctx.font = `${size}px 'Microsoft Yahei'`\r\n        ctx.fillText(text, offset, (trackIndex + 1) * trackHeight)\r\n        barrage.offset -= speed\r\n        if (barrageIndex === 0 && barrage.offset < 0 && Math.abs(barrage.offset) >= width) {\r\n          removeTop = true\r\n        }\r\n      })\r\n      track.updateOffset()\r\n      if (removeTop) {\r\n        track.removeTop()\r\n      }\r\n    })\r\n  }\r\n}\r\n","import FixedTopCommander from './fixed-top'\r\nimport FixedBottomCommander from './fixed-bottom'\r\nimport RollingCommander from './rolling'\r\nimport { RenderEngine } from '../../types'\r\n\r\nconst engine: RenderEngine = {\r\n  FixedBottomCommander,\r\n  FixedTopCommander,\r\n  RollingCommander\r\n}\r\n\r\nexport default engine\r\n","export function createElement(tagName: string) {\n  return document.createElement(tagName)\n}\n\nexport function createBarrage(text: string, color: string, fontSize: string, left: string) {\n  const danmu = createElement('div')\n  setStyle(danmu, {\n    position: 'absolute',\n    color,\n    fontSize,\n    transform: `translateX(${left}px)`,\n    textShadow: '#000 1px 0 0, #000 0 1px 0, #000 -1px 0 0, #000 0 -1px 0',\n    pointerEvents: 'auto',\n    padding: '3px 20px',\n    borderRadius: '20px',\n    backgroundColor: 'transparent'\n  })\n  danmu.textContent = text\n  return danmu\n}\n\nexport function appendChild(parent: HTMLElement, child: HTMLElement) {\n  return parent.appendChild(child)\n}\n\nexport function setStyle(el: HTMLElement, style: Partial<CSSStyleDeclaration>) {\n  for (const key in style) {\n    el.style[key] = style[key]!\n  }\n}\n\nexport function setHoverStyle(el: HTMLElement) {\n  el.style.backgroundColor = 'rgba(0, 0, 0, 0.5)'\n  el.style.cursor = 'pointer'\n}\n\nexport function setBlurStyle(el: HTMLElement) {\n  el.style.backgroundColor = 'transparent'\n  el.style.cursor = 'auto'\n}\n","import BaseCommander from '../base'\nimport { BarrageObject, CommanderConfig } from '../../types'\nimport { setHoverStyle, setBlurStyle } from '../../helper/css'\n\nexport default abstract class BaseCssCommander<T extends BarrageObject> extends BaseCommander<T> {\n  el: HTMLDivElement\n  objToElm: WeakMap<T, HTMLElement> = new WeakMap()\n  elmToObj: WeakMap<HTMLElement, T> = new WeakMap()\n  freezeBarrage: T | null = null\n\n  constructor(el: HTMLDivElement, config: CommanderConfig) {\n    super(config)\n\n    this.el = el\n\n    const wrapper = config.wrapper\n    if (wrapper && config.interactive) {\n      wrapper.addEventListener('mousemove', this._mouseMoveEventHandler.bind(this))\n      wrapper.addEventListener('click', this._mouseClickEventHandler.bind(this))\n    }\n  }\n\n  removeElement(target: HTMLElement) {\n    this.el.removeChild(target)\n  }\n\n  _mouseMoveEventHandler(e: Event) {\n    const target = e.target\n    if (!target) {\n      return\n    }\n\n    const newFreezeBarrage = this.elmToObj.get(target as HTMLElement)\n    const oldFreezeBarrage = this.freezeBarrage\n\n    if (newFreezeBarrage === oldFreezeBarrage) {\n      return\n    }\n\n    this.freezeBarrage = null\n\n    if (newFreezeBarrage) {\n      this.freezeBarrage = newFreezeBarrage\n      newFreezeBarrage.freeze = true\n      setHoverStyle(target as HTMLElement)\n      this.$emit('hover', newFreezeBarrage, target as HTMLElement)\n    }\n\n    if (oldFreezeBarrage) {\n      oldFreezeBarrage.freeze = false\n      const oldFreezeElm = this.objToElm.get(oldFreezeBarrage)\n      oldFreezeElm && setBlurStyle(oldFreezeElm)\n      this.$emit('blur', oldFreezeBarrage, oldFreezeElm)\n    }\n  }\n\n  _mouseClickEventHandler(e: Event) {\n    const target = e.target\n    const barrageObject = this.elmToObj.get(target as HTMLElement)\n    if (barrageObject) {\n      this.$emit('click', barrageObject, target)\n    }\n  }\n\n  reset() {\n    this.forEach(track => {\n      track.forEach(barrage => {\n        const el = this.objToElm.get(barrage)\n        if (!el) {\n          return\n        }\n        this.removeElement(el)\n      })\n      track.reset()\n    })\n  }\n}\n","import BaseCssCommander from './base-css'\r\nimport { CommanderConfig, FixedBarrageObejct } from '../../types'\r\nimport Track from '../../track'\r\nimport { isEmptyArray } from '../../helper'\r\nimport { createBarrage, appendChild } from '../../helper/css'\r\n\r\nexport default abstract class BaseFixedCssCommander extends BaseCssCommander<FixedBarrageObejct> {\r\n  protected elHeight: number\r\n\r\n  constructor(el: HTMLDivElement, config: CommanderConfig) {\r\n    super(el, config)\r\n\r\n    this.elHeight = el.offsetHeight\r\n  }\r\n\r\n  add(barrage: FixedBarrageObejct): boolean {\r\n    const trackId = this._findTrack()\r\n    if (trackId === -1) {\r\n      return false\r\n    }\r\n    // 创建弹幕DOM\r\n    const { text, size, color, offset } = barrage\r\n    const fontSize = size + 'px'\r\n    let posLeft = offset + 'px'\r\n    const danmu = createBarrage(text, color, fontSize, posLeft)\r\n    appendChild(this.el, danmu)\r\n    const width = danmu.offsetWidth\r\n\r\n    // 计算位置\r\n    const track = this.tracks[trackId]\r\n    const trackWidth = this.trackWidth\r\n    const barrageOffset = (trackWidth - width) / 2\r\n    const normalizedBarrage = Object.assign({}, barrage, {\r\n      offset: barrageOffset,\r\n      duration: this.duration,\r\n      width\r\n    })\r\n\r\n    this.objToElm.set(normalizedBarrage, danmu)\r\n    this.elmToObj.set(danmu, normalizedBarrage)\r\n    track.push(normalizedBarrage)\r\n    return true\r\n  }\r\n\r\n  _findTrack(): number {\r\n    let idx = -1\r\n    for (let i = 0; i < this.tracks.length; ++i) {\r\n      if (isEmptyArray(this.tracks[i].barrages)) {\r\n        idx = i\r\n        break\r\n      }\r\n    }\r\n    return idx\r\n  }\r\n\r\n  _extractBarrage(): void {\r\n    let isIntered: boolean\r\n    for (let i = 0; i < this.waitingQueue.length; ) {\r\n      isIntered = this.add(this.waitingQueue[i])\r\n      if (!isIntered) {\r\n        break\r\n      }\r\n      this.waitingQueue.shift()\r\n    }\r\n  }\r\n\r\n  _removeTopElementFromTrack(track: Track<FixedBarrageObejct>) {\r\n    const barrage = track.barrages[0]\r\n    if (!barrage) {\r\n      return\r\n    }\r\n    const el = this.objToElm.get(barrage)!\r\n    this.objToElm.delete(barrage)\r\n    this.elmToObj.delete(el)\r\n    this.removeElement(el)\r\n  }\r\n}\r\n","import BaseFixedCommander from './base-fixed'\r\nimport { TIME_PER_FRAME } from '../../constants'\r\nimport { CommanderConfig } from '../../types'\r\n\r\nexport default class FixedTopCommander extends BaseFixedCommander {\r\n  constructor(el: HTMLDivElement, config: CommanderConfig) {\r\n    super(el, config)\r\n  }\r\n\r\n  render(): void {\r\n    this._extractBarrage()\r\n    const objToElm = this.objToElm\r\n    const trackHeight = this.trackHeight\r\n    this.tracks.forEach((track, trackIndex) => {\r\n      const barrage = track.barrages[0]\r\n      if (!barrage) {\r\n        return\r\n      }\r\n      const el = objToElm.get(barrage)\r\n      if (!el) {\r\n        return\r\n      }\r\n      if (barrage.freeze) {\r\n        return\r\n      }\r\n      const { offset } = barrage\r\n      const y = trackIndex * trackHeight\r\n      el.style.transform = `translate(${offset}px, ${y}px)`\r\n      barrage.duration -= TIME_PER_FRAME\r\n      if (barrage.duration <= 0) {\r\n        this._removeTopElementFromTrack(track)\r\n        track.removeTop()\r\n      }\r\n    })\r\n  }\r\n}\r\n","import BaseCssCommander from './base-css'\r\nimport { ScrollBarrageObject, CommanderConfig } from '../../types'\r\nimport { isEmptyArray, getArrayRight } from '../../helper'\r\nimport { TIME_PER_FRAME } from '../../constants'\r\nimport Track from '../../track'\r\nimport { createBarrage, appendChild } from '../../helper/css'\r\n\r\nexport default class RollingCssCommander extends BaseCssCommander<ScrollBarrageObject> {\r\n  constructor(el: HTMLDivElement, config: CommanderConfig) {\r\n    super(el, config)\r\n  }\r\n\r\n  private get _defaultSpeed(): number {\r\n    return (this.trackWidth / this.duration) * TIME_PER_FRAME\r\n  }\r\n\r\n  private get _randomSpeed(): number {\r\n    return 0.8 + Math.random() * 1.3\r\n  }\r\n\r\n  add(barrage: ScrollBarrageObject): boolean {\r\n    const trackId = this._findTrack()\r\n    if (trackId === -1) {\r\n      return false\r\n    }\r\n    // 创建弹幕DOM\r\n    const { text, size, color, offset } = barrage\r\n    const fontSize = size + 'px'\r\n    const posLeft = offset + 'px'\r\n    const danmu = createBarrage(text, color, fontSize, posLeft)\r\n    appendChild(this.el, danmu)\r\n    const width = danmu.offsetWidth\r\n\r\n    // 计算弹幕速度\r\n    const track = this.tracks[trackId]\r\n    const trackOffset = track.offset\r\n    const trackWidth = this.trackWidth\r\n    let speed: number\r\n    if (isEmptyArray(track.barrages)) {\r\n      speed = this._defaultSpeed * this._randomSpeed\r\n    } else {\r\n      const { speed: preSpeed } = getArrayRight<ScrollBarrageObject>(track.barrages)\r\n      speed = (trackWidth * preSpeed) / trackOffset\r\n    }\r\n    speed = Math.min(speed, this._defaultSpeed * 2)\r\n    const normalizedBarrage = Object.assign({}, barrage, {\r\n      offset: trackWidth,\r\n      speed,\r\n      width\r\n    })\r\n    this.objToElm.set(normalizedBarrage, danmu)\r\n    this.elmToObj.set(danmu, normalizedBarrage)\r\n    track.push(normalizedBarrage)\r\n    track.offset = trackWidth + normalizedBarrage.width * 1.2\r\n    return true\r\n  }\r\n\r\n  _findTrack(): number {\r\n    let idx = -1\r\n    let max = -Infinity\r\n    this.forEach((track, index) => {\r\n      const trackOffset = track.offset\r\n      if (trackOffset > this.trackWidth) {\r\n        return\r\n      }\r\n      const t = this.trackWidth - trackOffset\r\n      if (t > max) {\r\n        idx = index\r\n        max = t\r\n      }\r\n    })\r\n    return idx\r\n  }\r\n\r\n  _extractBarrage(): void {\r\n    let isIntered: boolean\r\n    for (let i = 0; i < this.waitingQueue.length; ) {\r\n      isIntered = this.add(this.waitingQueue[i])\r\n      if (!isIntered) {\r\n        break\r\n      }\r\n      this.waitingQueue.shift()\r\n    }\r\n  }\r\n\r\n  render(): void {\r\n    this._extractBarrage()\r\n    const objToElm = this.objToElm\r\n    const trackHeight = this.trackHeight\r\n    this.forEach((track: Track<ScrollBarrageObject>, trackIndex: number) => {\r\n      let shouldRemove = false\r\n      let shouldRemoveIndex = -1\r\n      track.forEach((barrage, barrageIndex) => {\r\n        if (!objToElm.has(barrage)) {\r\n          return\r\n        }\r\n        if (barrage.freeze) {\r\n          return\r\n        }\r\n        const el = objToElm.get(barrage)!\r\n        const offset = barrage.offset\r\n        el.style.transform = `translate(${offset}px, ${trackIndex * trackHeight}px)`\r\n        barrage.offset -= barrage.speed\r\n        if (barrage.offset < 0 && Math.abs(barrage.offset) > barrage.width) {\r\n          shouldRemove = true\r\n          shouldRemoveIndex = barrageIndex\r\n        }\r\n      })\r\n      track.updateOffset()\r\n      if (shouldRemove) {\r\n        this._removeElementFromTrack(track, shouldRemoveIndex)\r\n        track.remove(shouldRemoveIndex)\r\n      }\r\n    })\r\n  }\r\n\r\n  _removeElementFromTrack(track: Track<ScrollBarrageObject>, removedIndex: number) {\r\n    const barrage = track.barrages[removedIndex]\r\n    if (!barrage) {\r\n      return\r\n    }\r\n    const el = this.objToElm.get(barrage)!\r\n    this.objToElm.delete(barrage)\r\n    this.elmToObj.delete(el)\r\n    this.removeElement(el)\r\n  }\r\n}\r\n","import BaseFixedCommander from './base-fixed'\r\nimport { TIME_PER_FRAME } from '../../constants'\r\nimport { CommanderConfig } from '../../types'\r\n\r\nexport default class FixedTopCommander extends BaseFixedCommander {\r\n  constructor(el: HTMLDivElement, config: CommanderConfig) {\r\n    super(el, config)\r\n  }\r\n\r\n  render(): void {\r\n    this._extractBarrage()\r\n    const objToElm = this.objToElm\r\n    const trackHeight = this.trackHeight\r\n    const maxTrack = this.maxTrack\r\n    const elHeight = this.el.offsetHeight\r\n    const yBase = elHeight - maxTrack * trackHeight\r\n    this.tracks.forEach((track, trackIndex) => {\r\n      const barrage = track.barrages[0]\r\n      if (!barrage) {\r\n        return\r\n      }\r\n      const el = objToElm.get(barrage)\r\n      if (!el) {\r\n        return\r\n      }\r\n      if (barrage.freeze) {\r\n        return\r\n      }\r\n      const { offset } = barrage\r\n      const y = yBase + trackIndex * trackHeight\r\n      el.style.transform = `translate(${offset}px, ${y}px)`\r\n      barrage.duration -= TIME_PER_FRAME\r\n      if (barrage.duration <= 0) {\r\n        this._removeTopElementFromTrack(track)\r\n        track.removeTop()\r\n      }\r\n    })\r\n  }\r\n}\r\n","import FixedTopCommander from './fixed-top'\r\nimport RollingCommander from './rolling'\r\nimport FixedBottomCommander from './fixed-bottom'\r\nimport { RenderEngine } from '../../types'\r\n\r\nconst engine: RenderEngine = {\r\n  FixedTopCommander,\r\n  FixedBottomCommander,\r\n  RollingCommander\r\n}\r\n\r\nexport default engine\r\n","import CanvasEngine from './canvas'\r\nimport CssEngine from './css-renderer'\r\nimport { RenderEngine } from '../types'\r\n\r\nexport function getEngine(type: string): RenderEngine | null {\r\n  if (type === 'canvas') {\r\n    return CanvasEngine\r\n  }\r\n  if (type === 'css3') {\r\n    return CssEngine\r\n  }\r\n  return null\r\n}\r\n","import BarrageMaker from '../a-barrage'\r\nimport { HTML_ELEMENT_NATIVE_EVENTS } from '../constants'\r\n\r\nexport function injectNativeEvents(instance: BarrageMaker): void {\r\n  HTML_ELEMENT_NATIVE_EVENTS.map(eventName => {\r\n    instance.el.addEventListener(eventName, event => {\r\n      instance.$emit(eventName, event)\r\n    })\r\n  })\r\n}\r\n\r\nexport function injectEventsDelegator(instance: BarrageMaker): void {\r\n  const proxyObject = instance.config.proxyObject\r\n  if (!(proxyObject instanceof HTMLElement)) {\r\n    return\r\n  }\r\n  type MouseEventName =\r\n    | 'click'\r\n    | 'dblclick'\r\n    | 'mousedown'\r\n    | 'mousemove'\r\n    | 'mouseout'\r\n    | 'mouseover'\r\n    | 'mouseup'\r\n  HTML_ELEMENT_NATIVE_EVENTS.map(eventName => {\r\n    // ! 如果是联合类型 HtmlDivElement | HtmlCanvasElement 的话第二个参数会报错\r\n    // ! 所以这里先用类型断言搞一搞\r\n    ;(instance.el as HTMLElement).addEventListener(eventName as MouseEventName, (e: MouseEvent) => {\r\n      const target = e.target\r\n      if (target !== instance.el) {\r\n        return\r\n      }\r\n      const event = new MouseEvent(eventName, {\r\n        view: window,\r\n        relatedTarget: proxyObject,\r\n        altKey: e.altKey,\r\n        button: e.button,\r\n        buttons: e.buttons,\r\n        clientX: e.clientX,\r\n        clientY: e.clientY,\r\n        ctrlKey: e.ctrlKey,\r\n        metaKey: e.metaKey,\r\n        movementX: e.movementX,\r\n        movementY: e.movementY,\r\n        screenX: e.screenX,\r\n        screenY: e.screenY,\r\n        shiftKey: e.shiftKey\r\n      })\r\n      proxyObject.dispatchEvent(event)\r\n    })\r\n  })\r\n}\r\n","import BarrageMaker from '../a-barrage'\r\nimport {\r\n  RawBarrageObject,\r\n  CommanderMapKey,\r\n  ScrollBarrageObject,\r\n  FixedBarrageObejct\r\n} from '../types'\r\n\r\nexport default {\r\n  clear(this: BarrageMaker) {\r\n    const { width, height } = this.canvas!\r\n    this._forEachManager(manager => manager.reset())\r\n    this.ctx!.clearRect(0, 0, width, height)\r\n  },\r\n  add(this: BarrageMaker, barrage: RawBarrageObject, type: CommanderMapKey = 'scroll') {\r\n    const { text, color, size } = barrage\r\n    const ctx = this.ctx!\r\n    const fontSize = (size || this.config.fontSize) * this.config.zoom\r\n    const fontColor = color || this.config.fontColor\r\n\r\n    ctx.font = `${fontSize}px 'Microsoft Yahei'`\r\n    const { width } = ctx.measureText(text)\r\n    if (type === 'scroll') {\r\n      const barrageObject: ScrollBarrageObject = {\r\n        text,\r\n        width,\r\n        color: fontColor,\r\n        size: fontSize,\r\n        speed: 0,\r\n        offset: 0\r\n      }\r\n      this.commanderMap[type].waitingQueue.push(barrageObject)\r\n    } else {\r\n      const barrageObject: FixedBarrageObejct = {\r\n        text,\r\n        width,\r\n        color: fontColor,\r\n        size: fontSize,\r\n        duration: 0,\r\n        offset: 0\r\n      }\r\n      this.commanderMap[type].waitingQueue.push(barrageObject)\r\n    }\r\n  },\r\n  _render(this: BarrageMaker) {\r\n    const ctx = this.ctx!\r\n    const canvas = this.canvas!\r\n    ctx.shadowBlur = 2\r\n    ctx.shadowColor = 'rgba(0, 0, 0, 0.8)'\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n    this._forEachManager(manager => manager.render())\r\n\r\n    this.animation = requestAnimationFrame(this._render.bind(this))\r\n  }\r\n}\r\n","import BarrageMaker from '../a-barrage'\nimport {\n  RawBarrageObject,\n  CommanderMapKey,\n  ScrollBarrageObject,\n  FixedBarrageObejct\n} from '../types'\n// import { createBarrage, appendChild } from '../helper/css';\n// import RollingCssCommander from '../commander/css-renderer/rolling';\nimport { requestAnimationFrame } from '../helper'\n\nexport default {\n  clear(this: BarrageMaker) {\n    this._forEachManager(manager => manager.reset())\n  },\n  add(this: BarrageMaker, barrage: RawBarrageObject, type: CommanderMapKey = 'scroll') {\n    const { text, color = this.config.fontColor, size = this.config.fontSize } = barrage\n    const fontColor = color\n    const fontSize = size * this.config.zoom\n    const trackWidth = this.el.offsetWidth\n    // const posLeft = trackWidth + 'px';\n\n    // const danmu = createBarrage(text, fontColor, fontSize, posLeft);\n    // appendChild(this.el, danmu);\n    // const width = danmu.offsetWidth;\n    if (type === 'scroll') {\n      const barrageObject: ScrollBarrageObject = {\n        text,\n        width: 0,\n        color: fontColor,\n        size: fontSize,\n        speed: 0,\n        offset: trackWidth\n      }\n      // (this.commanderMap[type] as RollingCssCommander).objToElm.set(barrageObject, danmu);\n      this.commanderMap[type].waitingQueue.push(barrageObject)\n    } else {\n      const barrageObject: FixedBarrageObejct = {\n        text,\n        width: 0,\n        color: fontColor,\n        size: fontSize,\n        duration: this.config.duration,\n        offset: trackWidth\n      }\n      this.commanderMap[type].waitingQueue.push(barrageObject)\n    }\n  },\n  _render(this: BarrageMaker) {\n    this._forEachManager(manager => manager.render())\n\n    this.animation = requestAnimationFrame(this._render.bind(this))\n  }\n}\n","import { RawBarrageObject, CommanderMapKey } from '../types'\r\nimport CanvasStragy from './canvas'\r\nimport Css3Stragy from './css3'\r\n\r\nexport interface FnMap {\r\n  clear(): void\r\n  add(barrage: RawBarrageObject, type: CommanderMapKey): void\r\n  _render(): void\r\n}\r\n\r\ntype FnMapKey = keyof FnMap\r\n\r\nexport function getHandler(engine: 'canvas' | 'css3', fn: FnMapKey) {\r\n  const fnMap: FnMap = engine === 'canvas' ? CanvasStragy : Css3Stragy\r\n  return fnMap[fn]\r\n}\r\n","import {\n  BarrageConfig,\n  RawBarrageObject,\n  CommanderMap,\n  CommanderMapKey,\n  ScrollBarrageObject,\n  FixedBarrageObejct,\n  BarrageMouseEventHandler\n} from './types'\nimport { getEl, requestAnimationFrame, cancelAnimationFrame, deepMerge, isCanvas } from './helper'\nimport EventEmitter from './event-emitter'\nimport { getEngine } from './commander'\nimport BaseCommander from './commander/base'\nimport { injectNativeEvents, injectEventsDelegator } from './event'\nimport { getHandler, FnMap } from './stragy'\n\nconst defaultConfig: BarrageConfig = {\n  engine: 'canvas',\n  zoom: 1,\n  proxyObject: null,\n  usePointerEvents: true,\n  maxTrack: 4,\n  fontSize: 20,\n  fontColor: '#fff',\n  duration: 10000,\n  trackHeight: 20 * 1.5,\n  wrapper: null,\n  interactive: true\n}\n\ntype BarrageConfigInit = Partial<BarrageConfig>\n\nexport default class BarrageMaker extends EventEmitter {\n  el: HTMLDivElement | HTMLCanvasElement\n  canvas: HTMLCanvasElement | null = null\n  ctx: CanvasRenderingContext2D | null = null\n  config: BarrageConfig\n  commanderMap: CommanderMap\n  animation: number | null = null\n\n  constructor(el: HTMLDivElement | HTMLCanvasElement | string, config?: BarrageConfigInit) {\n    super()\n\n    this.config = deepMerge(defaultConfig, config || {})\n\n    console.log(this.config)\n\n    this.el = getEl(el, this.config.engine)\n\n    if (isCanvas(this.el)) {\n      this.canvas = this.el\n      this.ctx = this.canvas.getContext('2d')!\n    }\n\n    // 兼容性：IE11+ / 非IE基本全支持\n    // pointer-events 避免上层canvas阻碍下层点击\n    if (this.config.usePointerEvents) {\n      this.el.style.pointerEvents = 'none'\n    }\n\n    // 获取渲染引擎\n    const renderEngine = getEngine(this.config.engine)!\n    const commanderConfig = {\n      trackWidth: this.el.offsetWidth,\n      trackHeight: this.config.trackHeight,\n      maxTrack: this.config.maxTrack,\n      duration: this.config.duration,\n      wrapper: this.config.wrapper,\n      interactive: this.config.interactive\n    }\n\n    const rootEle = this.config.engine === 'canvas' ? this.canvas : this.el\n    this.commanderMap = {\n      scroll: new renderEngine.RollingCommander(rootEle, commanderConfig),\n      'fixed-top': new renderEngine.FixedTopCommander(rootEle, commanderConfig),\n      'fixed-bottom': new renderEngine.FixedBottomCommander(rootEle, commanderConfig)\n    }\n\n    this.resize()\n\n    // 注入事件控制逻辑\n    injectNativeEvents(this)\n    injectEventsDelegator(this)\n  }\n\n  resize(width?: number) {\n    width = width || this.el.offsetWidth\n    this._forEachManager(manager => manager.resize(width))\n  }\n\n  clear() {\n    const fn = getHandler(this.config.engine, 'clear') as FnMap['clear']\n    return fn.call(this)\n  }\n\n  setOpacity(opacity: number = 1) {\n    this.el.style.opacity = `${opacity}`\n  }\n\n  setFontSize(zoom: number = 1) {\n    this.config.zoom = zoom\n  }\n\n  add(barrage: RawBarrageObject, type: CommanderMapKey = 'scroll') {\n    const fn = getHandler(this.config.engine, 'add') as FnMap['add']\n    return fn.call(this, barrage, type)\n  }\n\n  start() {\n    if (this.animation) {\n      return\n    }\n    this.animation = requestAnimationFrame(this._render.bind(this))\n  }\n\n  stop() {\n    if (!this.animation) {\n      return\n    }\n    cancelAnimationFrame(this.animation)\n    this.animation = null\n  }\n\n  onBarrageHover(handler: BarrageMouseEventHandler) {\n    this._bindBarrageEvent('hover', handler)\n  }\n\n  onBarrageBlur(handler: BarrageMouseEventHandler) {\n    this._bindBarrageEvent('blur', handler)\n  }\n\n  onBarrageClick(handler: BarrageMouseEventHandler) {\n    this._bindBarrageEvent('click', handler)\n  }\n\n  _bindBarrageEvent(eventName: string, handler: BarrageMouseEventHandler) {\n    if (this.config.engine === 'css3') {\n      this.commanderMap['scroll'].$on(eventName, handler)\n      this.commanderMap['fixed-top'].$on(eventName, handler)\n      this.commanderMap['fixed-bottom'].$on(eventName, handler)\n    }\n  }\n\n  _forEachManager(\n    handler: (\n      commander: BaseCommander<ScrollBarrageObject> | BaseCommander<FixedBarrageObejct>\n    ) => any\n  ) {\n    Object.keys(this.commanderMap).forEach(key =>\n      handler.call(this, this.commanderMap[key as CommanderMapKey])\n    )\n  }\n\n  _render() {\n    const fn = getHandler(this.config.engine, '_render') as FnMap['_render']\n    return fn.call(this)\n  }\n}\n"],"names":["requestAnimationFrame","Track","BaseFixedCommander","engine","CanvasEngine","CssEngine"],"mappings":"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"}